# Generated by Django 5.1.2 on 2024-10-14 01:59

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.department')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.faculty')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matric_no', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('directorate', models.CharField(blank=True, max_length=100, null=True)),
                ('level', models.CharField(blank=True, choices=[('ND1', 'ND Level 1'), ('ND2', 'ND Level 2'), ('HND1', 'HND Level 1'), ('HND2', 'HND Level 2')], max_length=4, null=True)),
                ('study_mode', models.CharField(blank=True, choices=[('FT', 'Full Time'), ('PT', 'Part Time')], max_length=2, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('gpa_first_semester', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('gpa_second_semester', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('attendance_percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('other_names', models.CharField(blank=True, max_length=100, null=True)),
                ('maiden_name', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('nationality', models.CharField(blank=True, max_length=100, null=True)),
                ('state_of_origin', models.CharField(blank=True, max_length=100, null=True)),
                ('local_government_area', models.CharField(blank=True, max_length=100, null=True)),
                ('home_address', models.TextField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures')),
                ('marital_status', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_phone_number', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_address', models.TextField(blank=True, null=True)),
                ('next_of_kin_relationship', models.CharField(blank=True, max_length=100, null=True)),
                ('next_of_kin_email', models.EmailField(blank=True, max_length=100, null=True)),
                ('hall_of_residence', models.CharField(blank=True, choices=[('PTDF', 'PTDF'), ('NOBLE', 'Noble'), ('OLD', 'Old')], max_length=100, null=True)),
                ('room_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('blood_group', models.CharField(blank=True, max_length=100, null=True)),
                ('medical_condition', models.TextField(blank=True, null=True)),
                ('blood_type', models.CharField(blank=True, max_length=100, null=True)),
                ('allergies', models.TextField(blank=True, null=True)),
                ('current_medication', models.TextField(blank=True, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('courses', models.ManyToManyField(blank=True, to='student.course')),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.department')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.faculty')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
